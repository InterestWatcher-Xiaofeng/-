#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
版本管理文件
每次更新功能时，请更新此文件的版本号和更新日志
"""

# 版本号格式：V主版本号.次版本号.修订号
# 正式发布版本
VERSION = "V1.2.2"

# 版本发布日期
RELEASE_DATE = "2025-10-30"

# 更新日志
CHANGELOG = """
V1.2.2 (2025-10-30) - 文件管理与用户体验优化版
--------------------
🎉 重大优化：文件管理与用户体验
✅ 修复：每次搜索生成独立文件（添加时间戳避免覆盖）
✅ 新增：采集完成后自动清空关键词输入框
✅ 优化：文件命名格式"平台_关键词_类型_时间戳.格式"
✅ 优化：完成提示中增加"关键词已清空"提示
✅ 改进：支持连续采集，无需手动清空输入框

V1.2.1 (2025-10-30) - 进度显示与文件命名优化版
--------------------
🎉 重大优化：详细进度显示与文件命名
✅ 新增：详细进度条显示（如：1/10个视频正在抓取中）
✅ 新增：实时显示当前采集的视频标题
✅ 优化：文件命名改为"平台_关键词_类型.格式"
✅ 优化：进度条实时更新，显示当前/总数
✅ 改进：支持所有平台的统一文件命名规则

V1.2.0 (2025-10-30) - 批量关键词采集版
--------------------
🎉 重大更新：批量关键词自动采集
✅ 新增：批量关键词采集功能（每行一组关键词）
✅ 新增：多行关键词输入框（支持批量输入）
✅ 新增：采集进度实时显示（如：[2/5] 正在采集...）
✅ 新增：每组关键词独立保存数据文件
✅ 修复：浏览器启动失败问题（os变量作用域错误）
✅ 优化：批量采集完成后统一提示
✅ 改进：支持任意数量的关键词组批量采集

V1.1.0 (2025-10-25) - 浏览器驱动自动化版
--------------------
🎉 重大更新：一键安装浏览器驱动
✅ 新增：浏览器驱动自动检测功能
✅ 新增：一键安装Playwright浏览器驱动
✅ 新增：驱动状态实时显示
✅ 修复：资源文件路径问题（支持打包后运行）
✅ 优化：登录错误处理（自动重试3次）
✅ 优化：友好的错误提示信息
✅ 优化：网络超时自动重试机制
✅ 改进：首次运行体验更流畅

V1.0.0 (2025-10-26) - 正式发布版
--------------------
🎉 正式发布版本
✅ 完整的抖音评论采集功能
✅ 简洁易用的图形界面
✅ 严格遵守用户设置的采集数量
✅ 每次采集创建独立的带时间戳文件
✅ CSV列顺序优化（标题、链接、内容在前三列）
✅ 支持自定义输出目录
✅ 自动保存和恢复登录状态
✅ 统一浏览器架构，稳定可靠

V0.1.11 (2025-10-26)
--------------------
✅ 修复：严格限制采集数量，完全符合应用设置
✅ 修复：每次采集创建独立文件，不再追加到旧文件
✅ 优化：采集逻辑更精确，设置5个就采集5个
✅ 优化：文件名带时间戳，每次采集独立存储

V0.1.10 (2025-10-26)
--------------------
✅ 修复：CSV列顺序优化真正生效
✅ 新增：每次采集创建带时间戳的新文件（不再覆盖旧文件）
✅ 优化：文件名格式 search_comments_20251026_143052.csv

V0.1.9 (2025-10-26)
-------------------
✅ 新增：CSV列顺序优化（标题、链接、评论内容排在前三列）
✅ 优化：评论CSV文件更易读，重要信息优先显示

V0.1.8 (2025-10-26)
-------------------
✅ 修复：第二次采集失败问题（浏览器上下文被关闭）
✅ 新增：自定义输出目录支持
✅ 新增：采集完成后自动打开评论文件
✅ 新增：版本号显示系统
✅ 优化：GUI配置参数完整传递到后端
✅ 优化：文件保存路径提示更清晰

V0.1.7 (2025-10-26)
-------------------
✅ 修复：GUI配置参数不生效问题
✅ 新增：每个视频评论数量限制
✅ 新增：一级/二级评论开关
✅ 优化：采集逻辑更符合用户预期

V0.1.6 (2025-10-26)
-------------------
✅ 修复：登录浏览器与采集浏览器不同的问题
✅ 修复：平台选择错误导致连锁失败
✅ 新增：统一浏览器架构
✅ 新增：持久化事件循环管理

V0.1.5 (2025-10-25)
-------------------
✅ 修复：登录状态失效问题
✅ 修复：事件循环冲突错误
✅ 新增：浏览器上下文共享机制

V0.1.4 (2025-10-25)
-------------------
✅ 新增：登录状态检查功能
✅ 新增：登录信息自动保存
✅ 优化：GUI界面布局

V0.1.3 (2025-10-25)
-------------------
✅ 新增：多平台支持（抖音、小红书等）
✅ 新增：数据输出格式选择
✅ 优化：错误提示更友好

V0.1.2 (2025-10-25)
-------------------
✅ 新增：采集设置面板
✅ 新增：评论采集功能
✅ 优化：采集进度显示

V0.1.1 (2025-10-25)
-------------------
✅ 新增：基础GUI框架
✅ 新增：登录管理功能
✅ 新增：平台配置功能

V0.1.0 (2025-10-25)
-------------------
🎉 初始版本发布
✅ 基础功能实现
"""

def get_version():
    """获取当前版本号"""
    return VERSION

def get_version_info():
    """获取完整版本信息"""
    return {
        "version": VERSION,
        "release_date": RELEASE_DATE,
        "changelog": CHANGELOG
    }

def get_short_version():
    """获取简短版本号（用于窗口标题）"""
    return VERSION

def get_full_version_string():
    """获取完整版本字符串"""
    return f"{VERSION} ({RELEASE_DATE})"

# 版本比较函数
def compare_version(v1: str, v2: str) -> int:
    """
    比较两个版本号
    
    Args:
        v1: 版本号1 (例如: "V0.1.5")
        v2: 版本号2 (例如: "V0.1.8")
    
    Returns:
        -1: v1 < v2
         0: v1 == v2
         1: v1 > v2
    """
    # 移除V前缀
    v1 = v1.replace("V", "").replace("v", "")
    v2 = v2.replace("V", "").replace("v", "")
    
    # 分割版本号
    parts1 = [int(x) for x in v1.split(".")]
    parts2 = [int(x) for x in v2.split(".")]
    
    # 补齐长度
    max_len = max(len(parts1), len(parts2))
    parts1 += [0] * (max_len - len(parts1))
    parts2 += [0] * (max_len - len(parts2))
    
    # 逐位比较
    for p1, p2 in zip(parts1, parts2):
        if p1 < p2:
            return -1
        elif p1 > p2:
            return 1
    
    return 0

if __name__ == "__main__":
    print(f"当前版本: {get_version()}")
    print(f"发布日期: {RELEASE_DATE}")
    print("\n更新日志:")
    print(CHANGELOG)

